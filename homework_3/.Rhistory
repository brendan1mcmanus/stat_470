grep("[A-Z]", currs.codes)
grep("[a-z]", currs.codes)
grep("[A-Z]", currs.codes)
grep("[B-Z]", currs.codes)
grep("[F-Z]", currs.codes)
help(grepl)
grepl("[F-Z]", currs.codes)
grepl("[A-Z]", currs.codes)
grepl("[A-Z]", currs.codes) && !grepl("[a-z]", currs.codes)
length(currs.codes)
all(length(currs.codes) == length(currs.codes[1]))
length(currs.codes)
length(currs.codes[1])
nchar(currs.codes)
grepl("[A-Z]", currs.codes) && !grepl("[a-z]", currs.codes) && (nchar(currs.codes) == 3)
(nchar(currs.codes) == 2)
(nchar(currs.codes) == 3)
grepl("[A-Z]", currs.codes) && !grepl("[a-z]", currs.codes) && (nchar(currs.codes) == 3)
grepl("[A-Z]", currs.codes) && !grepl("[a-z]^[0-9]", currs.codes) && (nchar(currs.codes) == 3)
currs
curr.amt <- function(x) {
(gsub("^ +", "", x), 3, nchar(x))
}
curr.amt <- function(x) {
substrint(gsub("^ +", "", x), 3, nchar(x))
}
curr.amt(currs)
curr.amt(currs.codes)
curr.amt <- function(x) {
substring(gsub("^ +", "", x), 3, nchar(x))
}
curr.amt(currs)
curr.amt <- function(x) {
substring(gsub("^ +", "", x), 4, nchar(x))
}
curr.amt(currs)
curr.amt <- function(x) {
as.numeric(substring(gsub("^ +^[,]", "", x), 4, nchar(x)))
}
curr.amt(currs)
curr.amt <- function(x) {
as.numeric(substring(gsub("^ +", "", x), 4, nchar(x)))
}
curr.amt(currs)
curr.amt <- function(x) {
substring(gsub("^ +", "", x), 4, nchar(x))
}
curr.amt(currs)
curr.amt <- function(x) {
curr2num(substring(gsub("^ +", "", x), 4, nchar(x)))
}
curr.amt(currs)
currs
currs.num <- curr.amt(currs)
currs.num
length(currs) == length(currs.num)
curr.conv
currs
currs.codes
currs.num
currs.codes
curr.conv
curr.conv$USD
curr.conv[USD]
curr.conv$USD[1]
curr.conv$USD$USD
curr.conv$USD["USD"]
si
save.image()
help(str)
str(currs.codes)
nchar(str(currs.codes))
str(currs.codes)
fin <- str(currs.codes)
fin.len
vec.len
vec.len(fin)
fin.vec.len
str(currs.codes, vec.len = 3)
str(currs.codes, vec.len = 1000)
str(currs.codes)
str(currs.codes, nchar.max = 3, nchar.min = 3)
grepl("[A-Z]", currs.codes) && !grepl("[a-z]^[0-9]", currs.codes) && (nchar(currs.codes) == 3)
str(attributes(currs.codes))
str(currs.codes)
str(nchar(currs.codes)
)
check <- rep(3, 1000)
check
str(nchar(currs.codes)) == check
str(nchar(currs.codes))
str(currs.codes)
curr.conv
type(curr.conv)
help(curr.conv)
curr.conv
curr.conv[USD]
curr.conv["USD"]
curr.conv[1]["USD"]
curr.conv[0]["USD"]
curr.conv["USD"]["USD"]
curr.conv["USD"]["USD"]["USD"]
curr.conv["USD"]
curr.conv[c("USD", "USD")]
curr.conv[c("USD")]
curr.conv["USD"].isin(["USD"])
curr.conv["USD"].isin(c["USD"])
curr.conv["USD"].isin("USD")
grep("USD",curr.conv["USD"])
curr.conv[rownames(curr.conv)=="USD"]
curr.conv[rownames(curr.conv)=="USD",]
curr.conv[rownames(curr.conv)=="USD","USD"]
curr.conv[rownames(curr.conv)=="USD","GBP"]
currs.num
currs.USD <- conv[rownames(conv)=="USD", x.codes] * x.num
curr2USD <- function(x, conv) {
currs.USD <- conv[rownames(conv)=="USD", x.codes] * x.num
}
curr2USD(currs, curr.conv)
print(currs.conv)
currs.conv
curr.conv
curr2USD <- function(x, conv) {
currs.USD <- conv[rownames(conv)=="USD", x.codes] * x.num
}
curr2USD(currs, curr.conv)
curr2USD <- function(x, conv) {
x;
currs.USD <- conv[rownames(conv)=="USD", x.codes] * x.num
}
curr2USD(currs, curr.conv)
test <- function(x) {
x
}
test(curr.codes)
test(currs.codes)
test(currs)
test <- function(x) {
x.codes
}
test(currs)
curr2USD <- function(x, conv) {
currs.USD <- conv[rownames(conv)=="USD", curr.amt(x)] * x.num
}
curr2USD(currs, curr.conv)
conv[rownames(conv)=="USD", curr.ext(currs)] * (curr.amt(currs))
conv[rownames(curr.conv)=="USD", curr.ext(currs)] * (curr.amt(currs))
curr.conv
curr.convconv[rownames(curr.conv)=="USD", curr.ext(currs)] * (curr.amt(currs))
curr.conv[rownames(curr.conv)=="USD", curr.ext(currs)] * (curr.amt(currs))
head(curr.conv[rownames(curr.conv)=="USD", curr.ext(currs)] * (curr.amt(currs)), 2)
curr.conv[rownames(curr.conv)=="USD", curr.ext(currs)] * (curr.amt(currs))
length(curr.conv[rownames(curr.conv)=="USD", curr.ext(currs)] * (curr.amt(currs)))
currs.num
head(currs.num, 2)
head(currs.codes, 2)
curr.conv
curr.conv[rownames(curr.conv)=="USD", curr.ext(currs)]
curr.conv[rownames(curr.conv)=="USD", curr.ext(currs)] * (curr.amt(currs))
currs.num
unlist(curr.conv[rownames(curr.conv)=="USD", curr.ext(currs)] * (curr.amt(currs)))
unlist(curr.conv[rownames(curr.conv)=="USD", curr.ext(currs)] * (curr.amt(currs)), use.names = F)
curr2USD <- function(x, conv) {
unlist(conv[rownames(conv)=="USD", curr.ext(x)] * (curr.amt(x)), use.names = F)
}
curr2USD(currs, curr.conv)
currs.USD <- currs2USD(currs, curr.conv)
currs.USD <- curr2USD(currs, curr.conv)
head(currs.USD, 6)
head(currs.num)
curr.conv
head(currs.codes)
prettyNum(currs.USD)
prettyNum(currs.USD, big.mark=",")
help(paste)
paste(currs.USD, "$")
paste(currs.USD, " $")
paste("$", currs.USD)
paste("$", currs.USD)
currs.USD
paste("$", currs.USD, sep="")
paste("$", prettyNum(currs.USD, big.mark=","), sep="")
format(paste("$", prettyNum(currs.USD, big.mark=","), sep=""), justify="right")
help(writeLines)
writeLines(format(paste("$", prettyNum(currs.USD, big.mark=","), sep=""), justify="right"), sep="\n")
writeLines(format(paste("$", prettyNum(currs.USD, big.mark=","), sep=""), justify="right"), con=stdout(), sep="\n")
writeLines(format(paste("$", prettyNum(currs.USD, big.mark=","), sep=""), justify="right"), con="currency-amounts-in-USD.txt", sep="\n")
print_result <- prettyNum(currs.USD, big.mark=",")
print_result <- paste("$", print_result, sep="")
print_result <- format(print_result, justify="right")
writeLines(print_result, con="currency-amounts-in-USD.txt", sep="\n")
print_result
help(readLines)
readLines(con="currency-amounts-in-USD.txt")
data.fram("curr"=readLines(con="currency-amounts-in-USD.txt"))
data.frame("curr"=readLines(con="currency-amounts-in-USD.txt"))
read_in <- data.frame("curr"=readLines(con="currency-amounts-in-USD.txt"))
tail(read_in, 6)
gene
gene <- read.csv("nature13908-s2/Supplementary Table 2.csv", as.is=T, header = T, stringsAsFactors = T)
setwd("~/Desktop/school/stat_470/code/homework_3/nature13908-s2/")
gene <- read.csv("nature13908-s2/Supplementary Table 2.csv", as.is=T, header = T, stringsAsFactors = T)
setwd("~/Desktop/school/stat_470/code/homework_3/nature13908-s2/")
setwd("~/Desktop/school/stat_470/code/homework_3/")
gene <- read.csv("nature13908-s2/Supplementary Table 2.csv", as.is=T, header = T, stringsAsFactors = T)
save.image()
gene
gene.columns
colnames(gene)
gene$inChild
colnames(gene)
gene$effectGene
gene
colnames(gene)
gene$inChild
gene$location
substring(gene$location, 0, 1) == "X"
gene$familyDescription
grep(gene$familyDescription, "p")
gene$familyDescription == ""
with(gene$familyDescription == "")
summarize(gene$familyDescription == "")
summarize(length(gene$familyDescription == ""))
gene$familyDescription == "")
gene$familyDescription == ""
gene$familyDescription
with(gene, inChild)
inChild
gene$inChild
with(gene, inChild)
sel <- with(substring(gene$location, 0, 1) == "X" && gene$familyDescription != "")
sel <- substring(gene$location, 0, 1) == "X" && gene$familyDescription != ""
gene$inChild
nchar(gene$inChild) == 2
gene
colnames(gene)
geneC <- with(gene, sel)
sel <- substring(gene$location, 0, 1) == "X" && gene$familyDescription != "" && char(gene$inChild) == 2
geneC <- with(gene, sel)
geneC
sel <- substring(gene$location, 0, 1) == "X" && gene$familyDescription != "" && char(gene$inChild) == 2
sel
sel <- substring(gene$location, 0, 1) == "X" && gene$familyDescription != ""
sel
sel <- table(with(substring(gene$location, 0, 1) == "X" && gene$familyDescription != ""))
sel <- table(with(gene, substring(location, 0, 1) == "X" && familyDescription != ""))
sel
sel <- table(with(gene, substring(location, 0, 1) == "X")
)
sel
sel <- with(gene, substring(location, 0, 1) == "X")
sel
sel <- with(gene, substring(location, 0, 1) == "X" && familyDescription != "")
sel
sel <- with(gene, substring(location, 0, 1) == "X")
sel
with(gene, substring(location, 0, 1) == "X")
with(gene, familyDescription != "")
with(gene, familyDescription != "" && substring(location, 0, 1) == "X")
with(gene, familyDescription != "") && with(gene, substring(location, 0, 1) == "X")
with(gene, substring(location, 0, 1) == "X")
sel <- with(gene, (substring(location, 0, 1) == "X") && (familyDescription != ""))
sel
help(with)
sel <- with(gene, {
substring(location, 0, 1) == "X"
familyDescription != ""})
sel
sel <- with(gene, {
substring(location, 0, 1) == "X",
familyDescription != ""})
with(gene, {
substring(location, 0, 1) == "X",
familyDescription != ""})
sel <- with(gene, {
substring(location, 0, 1) == "X"
familyDescription != ""})
sel
sel <- with(gene, (substring(location, 0, 1) == "X") && (familyDescription != ""))
sel
sel <- with(gene, (substring(location, 0, 1) == "X", familyDescription != ""))
sel <- with(gene, (substring(location, 0, 1) == "X" + familyDescription != ""))
sel <- with(gene, (substring(location, 0, 1) == "X"))
sel
gene
gene$location
sel <- with(gene, (substring(location, 0, 1) != "G"))
sel
sel <- with(gene, (substring(location, 0, 1) != "G")) && with(gene, familyDescription != ""))
sel <- with(gene, (substring(location, 0, 1) != "G")) && with(gene, familyDescription != "")
sel
with(gene, familyDescription != "")
with(gene, (substring(location, 0, 1) != "G"))
with(gene, familyDescription != "")
length(gene$familyDescription)
length(gene$location)
length(with(gene, familyDescription != ""))
length(with(gene, (substring(location, 0, 1) != "G")))
sel <- with(gene, (substring(location, 0, 1) != "G")) && with(gene, familyDescription != "")
sel
sel <- with(gene, (substring(location, 0, 1) != "G")) + with(gene, familyDescription != "")
sel
sel <- with(gene, (substring(location, 0, 1) != "G")) || with(gene, familyDescription != "")
sel
sel <- with(gene, substring(location, 0, 1) != "G") && with(gene, familyDescription != "")
sel
sel <- with(gene, substring(location, 0, 1) != "G") & with(gene, familyDescription != "")
sel
sel <- with(gene, substring(location, 0, 1) != "G" & familyDescription != "")
sel
gene$inChild
sel <- with(gene, substring(location, 0, 1) != "G" & familyDescription != "" & (length(inChild) == 2))
sel
sel <- with(gene, substring(location, 0, 1) != "G" & familyDescription != "" & (nchar(inChild) == 2))
sel
sel
geneC <- with(gene, sel)
geneC
geneC <- gene[sel]
geneC <- gene[sel, 1:8]
geneC
colnames(geneC)
geneC <- gene[sel, 1:9]
colnames(geneC)
geneC <- gene[sel, 1:10]
colnames(geneC)
colnames(gene)
geneC <- gene[sel, 1:10]
dim(geneC)
geneC
head(geneC, 6)
geneC <- gene[sel, 1:9]
head(geneC, 6)
geneC <- gene[sel, 1:8]
head(geneC, 6)
geneC <- gene[sel, 1:9]
head(geneC, 6)
dim(geneC)
dim(gene)
head(geneC, 6)
sel <- with(gene,
substring(location, 0, 1) != "G" &
familyDescription != "" &
(nchar(inChild) == 2))
sel
head(geneC, 6)
sel <- with(gene,
substring(location, 0, 1) != "G" &
familyDescription != "" &
& (inChild == "pM" || inChild == "pF" || inChild == "sM"  || inChild == "sF"))
sel <- with(gene,
substring(location, 0, 1) != "G" &
familyDescription != "" &
(inChild == "pM" || inChild == "pF" || inChild == "sM"  || inChild == "sF"))
sel
sel <- with(gene,
substring(location, 0, 1) != "G" &
familyDescription != "" &
(inChild == "pM" | inChild == "pF" | inChild == "sM"  | inChild == "sF"))
sel
geneC <- gene[sel, 1:9]
dim(geneC)
head(geneC, 6)
help(strsplit)
strsplit(geneC, ":")
strsplit(geneC, split=":")
strsplit(geneC, split=:)
strsplit(geneC, ':')
strsplit(geneC$location, split=:)
strsplit(geneC$location, split=":")
help(sapply)
sapply(strsplit(geneC$location, split=":"), 1)
sapply(strsplit(geneC$location, split=":"), "[", 1)
sapply(strsplit(geneC$location, split=":"), "[", 2)
sapply(strsplit(geneC$location, split=":"), "-", 2)
sapply(strsplit(geneC$location, split=":"), "{", 2)
sapply(strsplit(geneC$location, split=":"), "[", 2)
geneC$Chrom <- sapply(strsplit(geneC$location, split=":"), "[", 1)
geneC$Chrom <- sapply(strsplit(geneC$location, split=":"), "[", 1)
geneC$Loc <- sapply(strsplit(geneC$location, split=":"), "[", 2)
head(geneC, 6)
geneC$prob <- substring(geneC$inChild, 0, 1) == "p"
geneC$prob
geneC$prob <- substring(geneC$inChild, 0, 1) == "p"
head(geneC, 6)
geneC$male <- substring(geneC$inChild, 1, 2) == "M"
geneC$male
geneC$prob <- substring(geneC$inChild, 0, 1) == "p"
geneC$prob
substring(geneC$inChild, 1, 2)
substring(geneC$inChild, 0, 1)
substring(geneC$inChild, 1, 2)
substring(geneC$inChild, 2, 2)
geneC$male <- substring(geneC$inChild, 2, 2) == "M"
geneC$male
head(geneC, 6)
geneC$LGD <- geneC$effectType == c('splice-site','frame-shift','nonsense','noStart','noEnd','no-frame-shift-newStop')
geneC$LCD
geneC$LGD
head(geneC, 6)
geneC$LGD <- geneC$effectType == 'splice-site' | 'frame-shift' | 'nonsense' | 'noStart' | 'noEnd' | 'no-frame-shift-newStop'
geneC$LGD <- geneC$effectType == ('splice-site' | 'frame-shift' | 'nonsense' | 'noStart' | 'noEnd' | 'no-frame-shift-newStop')
geneC$LGD <- geneC$effectType == 'splice-site' || 'frame-shift' || 'nonsense' || 'noStart' || 'noEnd' || 'no-frame-shift-newStop')
geneC$LGD <- geneC$effectType == 'splice-site' || 'frame-shift' || 'nonsense' || 'noStart' || 'noEnd' || 'no-frame-shift-newStop'
geneC$LGD <- geneC$effectType == c('splice-site','frame-shift','nonsense','noStart', 'noEnd','no-frame-shift-newStop')
geneC$LGD
head(geneC, 6)
geneC$LGD
View(geneC$LGD)
View(geneC)
geneC$LGD <- geneC$effectType == c("splice-site","frame-shift","nonsense","noStart", "noEnd,no-frame-shift-newStop")
geneC$LGD <- geneC$effectType == c("splice-site", "frame-shift", "nonsense", "noStart", "noEnd,no-frame-shift-newStop")
geneC$LGD <- grep(geneC$effectType, c("splice-site", "frame-shift", "nonsense", "noStart", "noEnd,no-frame-shift-newStop"))
geneC$LGD <- grep(geneC$effectType, c('splice-site','frame-shift','nonsense','noStart','noEnd','no-frame-shift-newStop'))
geneC$LGD <- geneC$effectType == c('splice-site','frame-shift','nonsense','noStart','noEnd','no-frame-shift-newStop')
geneC$LGD
head(geneC, 6)
geneC$LGD <- grep("splice-site^frame-shift^nonsense^noStart^noEnd^no-frame-shift-newStop", geneC$effectType)
geneC$LGD <- grep("(splice-site)^frame-shift^nonsense^noStart^noEnd^no-frame-shift-newStop", geneC$effectType)
geneC$LGD <- grep("(splice-site)^(frame-shift)^(nonsense)^(noStart)^(noEnd^no-frame-shift-newStop)", geneC$effectType)
geneC$LGD <- grepl("(splice-site)^(frame-shift)^(nonsense)^(noStart)^(noEnd^no-frame-shift-newStop)", geneC$effectType)
geneC$LGD
geneC$LGD <- grepl("[splice-site][frame-shift][nonsense][noStart][noEnd][no-frame-shift-newStop]", geneC$effectType)
geneC$LGD <- grepl("[splice-site]^[frame-shift][nonsense][noStart][noEnd][no-frame-shift-newStop]", geneC$effectType)
(
geneC$LGD <- grepl("(splice-site)^(frame-shift)^(nonsense)^(noStart)^(noEnd^no-frame-shift-newStop)", geneC$effectType)
geneC$LGD <- grepl("splice-site|frame-shift|nonsense|noStart|noEnd|no-frame-shift-newStop", geneC$effectType)
... (your code for 'geneC$LGD')
geneC$LGD <- grepl("splice-site|frame-shift|nonsense|noStart|noEnd|no-frame-shift-newStop", geneC$effectType)
geneC$LGD
head(geneC,6)
head(geneC,6)
table(geneC$prob)
table(with(geneC$prob))
with(table(geneC$prob))
with(geneC, table(prob))
head(geneC,6)
with(geneC, table(prob, exclude = if(LGD == FALSE)))
with(geneC, table(prob, exclude = if(LGD == FALSE))
with(geneC, table(prob, exclude = if(LGD == "FALSE")))
with(geneC, table(prob, exclude = if (LGD == FALSE)))
with(geneC, table(prob, exclude = (LGD == FALSE)))
with(geneC, table(prob, exclude = LGD == FALSE))
with(geneC, table(prob, exclude = (LGD == "FALSE")))
with(geneC, table(prob, exclude = (LGD == FALSE)))
with(geneC, table(geneC), exclude = FALSE)
with(geneC, table(LGD), exclude = FALSE)
with(geneC, table(LGD))
with(geneC == TRUE, table(LGD))
with(geneC[geneC$LGD == TRUE,], table(LGD))
with(geneC[geneC$LGD == TRUE,], table(prob))
with(geneC[geneC$LGD == TRUE,], table(LGD))
table(gene$LGD)
table(gene$LGD)
table(geneC$LGD)
geneC$LGD <- grepl("splice-site|frame-shift|nonsense|noStart|noEnd|no-frame-shift-newStop", geneC$effectType)
table(geneC$LGD)
with(geneC[geneC$LGD == TRUE,], table(LGD))
with(geneC[geneC$LGD == TRUE,], table(LGD))
with(geneC[geneC$LGD == TRUE,], table(prob))
help(pdf)
pdf("Chromosome_plot.pdf", height=6, width=6)
x <- c()
x
x <- geneC$Chrom
x
gsub(x, "X", "23")
help(gsub)
gsub("X", "23", x)
y <- geneC$Loc
y
plot(x, y, xlab="Chromosome", ylab="Location (Mb)", yaxt="n", pch=3)
plot(x=x, y=y, xlab="Chromosome", ylab="Location (Mb)", yaxt="n", pch=3)
x
y
x
x <- geneC$Chrom
x <- gsub("X", "23", x)
y <- geneC$Loc
plot(x=x, y=y, xlab="Chromosome", ylab="Location (Mb)", yaxt="n", pch=3)
dev.off()
pdf("Chromosome_plot.pdf", height=6, width=6)
x <- geneC$Chrom
x <- gsub("X", "23", x)
y <- geneC$Loc
plot(x=x, y=y, xlab="Chromosome", ylab="Location (Mb)", yaxt="n", pch=3)
dev.off()
help("axis")
pdf("Chromosome_plot.pdf", height=6, width=6)
x <- geneC$Chrom
x <- gsub("X", "23", x)
y <- geneC$Loc
plot(x=x, y=y, xlab="Chromosome", ylab="Location (Mb)", yaxt="n", pch=3)
axis(y, side=NULL, at=seq(0,250,by=50)*1000000, labels=seq(0,250,by=50))
axis(2, side=NULL, at=seq(0,250,by=50)*1000000, labels=seq(0,250,by=50))
axis(2, side=NULL, at=seq(0,250,by=50)*1000000, labels=seq(0,250,by=50))
dev.off()
pdf("Chromosome_plot.pdf", height=6, width=6)
x <- geneC$Chrom
x <- gsub("X", "23", x)
y <- geneC$Loc
plot(x=x, y=y, xlab="Chromosome", ylab="Location (Mb)", yaxt="n", pch=3)
axis(2, side=NULL, at=seq(0,250,by=50)*1000000, labels=seq(0,250,by=50))
axis(2, at=seq(0,250,by=50)*1000000, labels=seq(0,250,by=50))
dev.off()
pdf("Chromosome_plot.pdf", height=6, width=6)
x <- geneC$Chrom
x <- gsub("X", "23", x)
y <- geneC$Loc
plot(x=x, y=y, xlab="Chromosome", ylab="Location (Mb)", yaxt="n", pch=3)
axis(2, at=seq(0,250,by=50)*1000000, labels=seq(0,250,by=50))
dev.off()
